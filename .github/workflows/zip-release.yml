name: Zip and Release

on:
  push:
    branches:
      - main
    paths:
      - 'module/**'
  workflow_dispatch:
    inputs:
      version:
        description: '指定版本号（留空为RunID）'
        required: false
        default: ''

permissions:
  contents: write

jobs:
  zip-and-release:
    runs-on: ubuntu-latest

    env:
      TZ: Asia/Shanghai

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Update module version
        id: update_version
        run: |
          FILE=module/module.prop

          if [ -n "${{ github.event.inputs.version }}" ]; then
            VERSION="${{ github.event.inputs.version }}"
          else
            VERSION=$(date +'%Y%m%d%H%M')
          fi

          VERSION_CODE=${{ github.run_number }}

          sed -i "s/^version=.*/version=$VERSION/" $FILE
          sed -i "s/^versionCode=.*/versionCode=$VERSION_CODE/" $FILE

          echo "module_version=$VERSION" >> $GITHUB_OUTPUT
          echo "module_versionCode=$VERSION_CODE" >> $GITHUB_OUTPUT

      - name: Create zip file
        run: |
          cd module
          zip -r ../MiNavBarImmerse_${{ steps.update_version.outputs.module_version }}.zip . -x "*/immerse_rules.xsd" "immerse_rules.xsd"

      - name: Update "update.json"
        run: |
          ZIP_NAME="MiNavBarImmerse_${{ steps.update_version.outputs.module_version }}.zip"
          cat <<EOF > update.json
          {
            "version": "${{ steps.update_version.outputs.module_version }}",
            "versionCode": ${{ steps.update_version.outputs.module_versionCode }},
            "zipUrl": "https://github.com/${{ github.repository }}/releases/download/AutoBuild_${{ steps.update_version.outputs.module_version }}/$ZIP_NAME",
            "changelog": "https://raw.githubusercontent.com/Ianzb/MiNavBarImmerse/main/changelog.md"
          }
          EOF

      - name: Push "update.json"
        run: |
          git config --local user.name "github-actions[bot]"
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git add -f update.json
          git commit -m "Version ${{ steps.update_version.outputs.module_version }}_${{ steps.update_version.outputs.module_versionCode }}" || echo "No changes"
          git push

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: MiNavBarImmerse_${{ steps.update_version.outputs.module_version }}
          tag_name: AutoBuild_${{ steps.update_version.outputs.module_version }}
          files: MiNavBarImmerse_${{ steps.update_version.outputs.module_version }}.zip
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Post to Telegram Channel
        env:
          GROUP_ID: ${{ secrets.CHANNEL_ID }}
          BOT_TOKEN: ${{ secrets.BOT_TOKEN }}
          ZIP_FILE: "MiNavBarImmerse_${{ steps.update_version.outputs.module_version }}.zip"
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            COMMIT_MESSAGE="Manually run by ${{ github.actor }}"
          else
            COMMIT_MESSAGE="New push to GitHub
            \`\`\`
            ${{ github.event.head_commit.message }}
            \`\`\`by \`${{ github.event.head_commit.author.name }}\`
            See commit detail [here](${{ github.event.head_commit.url }})"
          fi

          cd ${{ github.workspace }}
          curl -F chat_id=${GROUP_ID} \
               -F message_thread_id=39 \
               -F document=@"${ZIP_FILE}" \
               -F parse_mode="MarkdownV2" \
               -F caption="$COMMIT_MESSAGE" \
               https://api.telegram.org/bot${BOT_TOKEN}/sendDocument